consumes:
- application/json
info:
  title: Top Crush
  version: 0.1.0
produces:
- application/json
schemes:
- http
swagger: "2.0"

securityDefinitions:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: Token  # name of the header, query parameter or cookie
      description: should return `AuthMode Token`
security:
  - ApiKeyAuth: []

paths: 
  /user/{id}/upload:
    get:
      description: get a image upload link
      parameters:
        - type: integer
          format: ObjectId
          name: id
          in: path
          required: true
      tags:
        - user
      responses:
        200:
          description: produce a pre-signed link for upload
          schema:
            $ref: "#/definitions/preSignedLink"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /user:
    post:
      description: create a new user
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/userPrivate"
      tags:
        - user
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/userPrivate"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    get:
      description: return the user information
      tags:
        - user
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/userPrivate"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /user/{id}:
    put:
      description: update the user information
      parameters:
        - type: integer
          format: ObjectId
          name: id
          in: path
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/definitions/userPrivate"
      tags:
        - user
      responses:
        201:
          description: Uploaded
          schema:
            $ref: "#/definitions/userPrivate"
        default:
          description: Generic error
          schema:
            $ref: "#/definitions/error"
        403:
          description: Forbidde
          schema:
            $ref: "#/definitions/error"

  /user/{id}/location:
    put:
      description: update user position
      parameters:
        - type: integer
          format: ObjectId
          name: id
          in: path
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/definitions/position"
      tags:
        - user
      responses:
        201:
          description: Update
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/error"

  /slide/users:
    get:
      description: return a list of near users
      tags:
        - slide
      responses:
        201:
          description: return a list of near users
          schema:
            type: array
            items:
              $ref: "#/definitions/userPublic"
        402:
          description: subscription requerid
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /slide/like:
    put:
      description: make a like
      tags:
        - slide
      parameters:
        - name: body
          in: body
          schema:
            type: string
            format: ObjectId
            readOnly: true
            description: the id of the match
      responses:
        201:
          description: like worked
          schema:
            $ref: "#/definitions/success"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
        402:
          description: no more likes
          schema:
            $ref: "#/definitions/error"
  /slide/superlike:
    put:
      description: make a superlike
      tags:
        - slide
      parameters:
        - name: matchID
          in: body
          schema:
            type: string
            format: ObjectId
            readOnly: true
            description: the id of the match
      responses:
        201:
          description: superlike worked
          schema:
            $ref: "#/definitions/success"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
        402:
          description: no more superlikes avaliable
          schema:
            $ref: "#/definitions/error"
  /slide/boast:
    put:
      description: make a boast
      tags:
        - slide
      parameters:
        - name: body
          in: body
          schema:
            type: string
            format: ObjectId
            readOnly: true
            description: the id of the match
      responses:
        201:
          description: boast worked
          schema:
            $ref: "#/definitions/success"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
        402:
          description: no more boasts
          schema:
            $ref: "#/definitions/error"

  /matchs/all:
    get:
      description: return a list of all matchs
      tags:
        - matchs
      responses:
        201:
          description: a list of users and chats
          schema:
            type: array
            items:
              type: object
              properties:
                chatID:
                  type: string
                  format: ObjectId
                user:
                  $ref: "#/definitions/userPublic"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /matchs/likes:
    get:
      description: all persons who like me
      tags:
        - matchs
      responses:
        201:
          description: list of users
          schema:
            type: array
            items:
              $ref: "#/definitions/userPublic"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
        402:
          description: subscription required
          schema:
            $ref: "#/definitions/error"
  /matchs/delete:
    delete:
      description: umatch user
      tags:
        - matchs
      parameters:
        - name: body
          in: body
          schema:
            type: string
            format: ObjectId
            readOnly: true
            description: the id of the other user
      responses:
        201:
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /chat/messages/{id}/{messageIndex}:
    get:
      tags:
        - chat
      description: return all message from messageIndex
      parameters:
        - type: integer
          format: ObjectId
          name: id
          in: path
          required: true
          description: chat id
        - type: integer
          format: uint64
          name: messageIndex
          in: path
          required: true
          description: this is last retrived message
          minimum: 0
      responses:
        200:
          description: list of messages
          schema:
            type: array
            items:
              $ref: "#/definitions/message"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /chat/messages/{id}:
    put:
      description: send a message in a chat
      tags:
        - chat
      parameters:
        - type: integer
          format: ObjectId
          name: id
          in: path
          required: true
          description: chat id
        - name: body
          in: body
          schema:
            type: string
      responses:
        201:
          description: message submited
          schema:
            type: string
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

definitions:
  position:
    type: object
    properties:
      latitude:
        type: number
        format: float64
        minimum: -90
        maximum: 90
      longitude:
        type: number
        format: float64
        minimum: -180
        maximum: 180
  preSignedLink:
    properties:
      url:
        type: string
        format: url
  images:
    properties:
      _id:
        type: string
        format: ObjectId
        readOnly: true
      url:
        type: string
        format: url
      uploadDate:
        type: string
        format: date-time
  userBasic:
    description: this user information is public
    properties:
      _id:
        type: string
        format: ObjectId
        readOnly: true
      description:
        type: string
        maxLength: 4096
      gender:
        type: string
        enum:
        - male
        - female
      interestIn:
        type: string
        enum:
        - male
        - female
      jobTitle:
        type: string
        maxLength: 256
      company:
        type: string
        maxLength: 256
      school:
        type: string
        maxLength: 256
      images:
        type: array
        items:
           $ref: "#/definitions/images"
      fullName:
        type: string
        maxLength: 256
        minLength: 10
    required:
      - fullName
      - interestIn
      - gender
  userPrivate:
    type: object
    allOf:
    - $ref: '#/definitions/userBasic'
    - properties:
        birthDate:
          type: string
          format: date
        lastBirthDateChange:
          type: string
          format: date
          description: is the last time the user change it birthDate, user cannot change it a high frequency
          readOnly: true
        lastPosition:
          $ref: "#/definitions/position"
        radio:
          description: distance in km to find matches
          type: integer
          format: uint64
          maximum: 30
          minimum: 1
        remaningLikes:
          type: integer
          format: int64
          readOnly: true
        remaningSuperlikes:
          type: integer
          format: int64
          readOnly: true
        remaningBoasts:
          type: integer
          format: int64
          readOnly: true
        boasts:
          readOnly: true
          type: array
          items:
            type: string
            format: date-time
            description: when the boast finish
        matchs:
          readOnly: true
          type: array
          items:
            type: object
            properties:
              userID:
                type: string
                format: ObjectId
                description: match user id
              chatID:
                type: string
                format: ObjectId
                description: chat ID
  userPublic:
    type: object
    allOf:
    - $ref: '#/definitions/userBasic'
    - properties:
        age:
          type: integer
          format: int64
          maximum: 120
          minimum: 18
        distance:
          type: integer
          format: int64
          description: distance in km

  userInternal:
    type: object
    allOf:
    - $ref: '#/definitions/userPrivate'
    - properties:
        likes:
          readOnly: true
          type: array
          items:
            type: string
            format: ObjectId
            description: match user id
        deslikes:
          readOnly: true
          type: array
          items:
            type: string
            format: ObjectId
            description: match user id
        superlikes:
          readOnly: true
          type: array
          items:
            type: string
            format: ObjectId
            description: match user id
        facebookID:
          type: string

  error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  success:
    type: string
    default: "OK"
  message:
    type: object
    required:
      - from
      - text
    properties:
      from:
        description: id of the user who write the message
        type: string
        format: ObjectId
      text:
        type: string
  chat:
    type: object
    properties:
      _id:
        type: string
        format: ObjectId
        readOnly: true
      messages:
        type: array
        items:
          $ref: "#/definitions/message"
      users:
        type: array
        items:
          type: string
          format: ObjectId
          readOnly: true   
  principal:
    description: save user session information
    type: object
    properties:
      facebookToken:
        type: string
      facebookID:
        type: string
      authMode:
        type: string
        enum:
        - AccountKit
        - Facebook

