// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/capella/topcrush/models"
)

// GetUserUploadOKCode is the HTTP code returned for type GetUserUploadOK
const GetUserUploadOKCode int = 200

/*GetUserUploadOK produce a pre-signed link for upload

swagger:response getUserUploadOK
*/
type GetUserUploadOK struct {

	/*
	  In: Body
	*/
	Payload *models.PreSignedLink `json:"body,omitempty"`
}

// NewGetUserUploadOK creates GetUserUploadOK with default headers values
func NewGetUserUploadOK() *GetUserUploadOK {

	return &GetUserUploadOK{}
}

// WithPayload adds the payload to the get user upload o k response
func (o *GetUserUploadOK) WithPayload(payload *models.PreSignedLink) *GetUserUploadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user upload o k response
func (o *GetUserUploadOK) SetPayload(payload *models.PreSignedLink) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetUserUploadDefault generic error response

swagger:response getUserUploadDefault
*/
type GetUserUploadDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserUploadDefault creates GetUserUploadDefault with default headers values
func NewGetUserUploadDefault(code int) *GetUserUploadDefault {
	if code <= 0 {
		code = 500
	}

	return &GetUserUploadDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get user upload default response
func (o *GetUserUploadDefault) WithStatusCode(code int) *GetUserUploadDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get user upload default response
func (o *GetUserUploadDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get user upload default response
func (o *GetUserUploadDefault) WithPayload(payload *models.Error) *GetUserUploadDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user upload default response
func (o *GetUserUploadDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserUploadDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
