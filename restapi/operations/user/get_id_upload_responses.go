// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/capella/topcrush/models"
)

// GetIDUploadOKCode is the HTTP code returned for type GetIDUploadOK
const GetIDUploadOKCode int = 200

/*GetIDUploadOK produce a pre-signed link for upload

swagger:response getIdUploadOK
*/
type GetIDUploadOK struct {

	/*
	  In: Body
	*/
	Payload *models.PreSignedLink `json:"body,omitempty"`
}

// NewGetIDUploadOK creates GetIDUploadOK with default headers values
func NewGetIDUploadOK() *GetIDUploadOK {

	return &GetIDUploadOK{}
}

// WithPayload adds the payload to the get Id upload o k response
func (o *GetIDUploadOK) WithPayload(payload *models.PreSignedLink) *GetIDUploadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Id upload o k response
func (o *GetIDUploadOK) SetPayload(payload *models.PreSignedLink) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIDUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetIDUploadDefault generic error response

swagger:response getIdUploadDefault
*/
type GetIDUploadDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetIDUploadDefault creates GetIDUploadDefault with default headers values
func NewGetIDUploadDefault(code int) *GetIDUploadDefault {
	if code <= 0 {
		code = 500
	}

	return &GetIDUploadDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get ID upload default response
func (o *GetIDUploadDefault) WithStatusCode(code int) *GetIDUploadDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get ID upload default response
func (o *GetIDUploadDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get ID upload default response
func (o *GetIDUploadDefault) WithPayload(payload *models.Error) *GetIDUploadDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ID upload default response
func (o *GetIDUploadDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIDUploadDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
